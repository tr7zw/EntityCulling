buildscript {
    repositories {
        //new forge repository
        maven { url "https://maven.minecraftforge.net" }
        maven { url 'https://repo.spongepowered.org/maven'}
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "4.0.4"
    //id "forge" version "ddb1eb0" //ddb1eb0
    //id 'org.spongepowered.mixin' version "d5f9873"
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io/' }
    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
    maven { url 'https://repo.essential.gg/repository/maven-releases/' }
    maven { url 'https://maven.minecraftforge.net/'}
}

version = project.mod_version
group = project.maven_group
archivesBaseName = 'entityculling-forge-mc' + project.minecraft_version

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    mappings = "stable_22"
    runDir = "run"
    replace('@NAME@', "EntityCulling")
    replace('@VER@': project.mod_version)
    replace('@ID@', "entityculling")
    makeObfSourceJar = false
    /*clientRunArgs += "--tweakClass"
    clientRunArgs += "org.spongepowered.asm.launch.MixinTweaker"
    clientRunArgs += "--mixin" 
    clientRunArgs += "entityculling.mixins.json"*/
}

configurations {
    // Creates an extra configuration that implements `implementation` to be used later as the configuration that shades libraries
    include
    implementation.extendsFrom(include)
    configurations.runtimeOnly.canBeResolved = true
}

repositories {
    mavenCentral()
    maven {
        url "https://repo.codemc.io/repository/maven-public/"
    }
    maven {
        name "spongepowered"
        url "https://repo.spongepowered.org/maven/"
    }
    maven { url 'https://jitpack.io' } //fabric asm
    maven { url 'https://repo.essential.gg/repository/maven-releases/' }
    maven {
        url "https://repo.codemc.io/repository/maven-public/"
    }
	maven { url "https://maven.legacyfabric.net"}
    maven { url 'https://maven.minecraftforge.net/'}
}

dependencies {
//    annotationProcessor 'org.spongepowered:mixin:0.7.11-SNAPSHOT'
    include "com.logisticscraft:occlusionculling:${project.occlusionculling_version}"

    include 'org.spongepowered:mixin:0.7.11-SNAPSHOT'

    sourceSets.main.java.srcDirs += new File(project.rootDir, "EntityCulling-Shared/src/main/java");//(project(':EntityCulling-Shared').sourceSets.main.java.srcDirs)
	sourceSets.main.resources.srcDirs += new File(project.rootDir, "EntityCulling-Shared/src/main/resources");//sourceSets.main.resources.srcDirs += (project(':EntityCulling-Shared').sourceSets.main.resources.srcDirs)
}


mixin {
    defaultObfuscationEnv = "notch"
}

shadowJar {
//    archiveClassifier.set('')
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    classifier "" //prevent creation of unshadowed jar
    exclude 'pack.mcmeta'
    exclude 'dummyThing'
    exclude '**/module-info.class'
    exclude '*.so'
    exclude '*.dylib'
    exclude '*.dll'
    exclude '*.jnilib'
    exclude 'ibxm/**'
    exclude 'com/jcraft/**'
    exclude 'org/lwjgl/**'
    exclude 'net/java/**'

    exclude 'META-INF/proguard/**'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/versions/**'
    exclude 'META-INF/com.android.tools/**'

    exclude 'fabric.mod.json'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    inputs.property 'name', 'entityculling'
    inputs.property 'modid', 'entityculling'
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand (
                'version':project.version,
                'mcversion':project.minecraft.version,
                'name':'EntityCulling',
                'modid': 'entityculling'
        )
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// move resources so they can be accessed at runtime
tasks.register('moveResources') {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources

jar {
    manifest.attributes(
            "ForceLoadAsMod": true,
            "ModSide": "CLIENT",
            "MixinConfigs": 'entityculling.mixins.json',
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": 0,
            "Manifest-Version": 1.0
    )

    enabled = false
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "entityculling.refmap.json"
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}

sourceSets {
    main {
        ext.refMap = "entityculling.refmap.json"
    }
}

tasks.reobfJar.dependsOn(shadowJar)
